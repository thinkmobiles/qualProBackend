var _ = require('lodash');
/**
 *  Represents a Filter Mapper constructor.
 *  Allow __You__ post `filter` generated by UI & then retrieve `filterObject` for mongoose.
 * @constructor
 */

var FilterMapper = function () {
    function ConvertType(array, type) {
        var result = {};

        switch (type) {
            case 'ObjectId':
                result['$in'] = array.objectID();
                break;
            case 'integer':
                result[$in] = _.map(array, function (element) {
                    return parseInt(element);
                });
                break;
            case 'boolean':
                result[$in] = _.map(array, function (element) {
                    if (element === 'true') {
                        return true;
                    }

                    return false;
                });
        }

        return result;
    };

    /**
     * @param {Object} filter Filter generated by UI.
     * @param {Object} filter.* Keys are model fields, like `country` or `outlet`.
     * @param {String} filter.*.type Type of filter values.
     * @param {Array} filter.*.values Array of filter values.
     * @return {Object} Returns query object.
     */

    this.mapFilter = function (filter) {
        var filterObject = {};
        var filterValues;
        var filterType;

        for (var filterName in filter) {
            filterValues = filter[filterName]['values'];
            filterType = filter[filterName]['type'];

            filterObject[filterName] = ConvertType(filterValues, filterType);
        }

        return filterObject;
    };

};

module.exports = FilterMapper;